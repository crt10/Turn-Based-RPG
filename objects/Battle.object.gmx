<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,Transition);
currplayer = ds_list_create();
ds_list_add(currplayer, playerbattle, player2battle, player3battle, player4battle);
currenemy = ds_list_create();
choice = 0;
con = 0;
xposition[0] = ds_list_find_value(currplayer, con).x;
xposition[1] = ds_list_find_value(currplayer, con).x-30;
xposition[2] = ds_list_find_value(currplayer, con).x;
xposition[3] = ds_list_find_value(currplayer, con).x+30;
yposition[0] = ds_list_find_value(currplayer, con).y-48;
yposition[1] = ds_list_find_value(currplayer, con).y-54;
yposition[2] = ds_list_find_value(currplayer, con).y-60;
yposition[3] = ds_list_find_value(currplayer, con).y-54;
player_turn = true;
team_spd = 0;
enemy_spd = 0;
move_done = false;
died = false;
enemy_choice = 0;
switch (global.contactenemy)
{
    case trig:
    {
        var spawn = spawn_roll(50,30,20,0);
        for (var i = 0; i &lt; spawn; i++)
        {
            ds_list_add(currenemy, instance_create((ds_list_find_value(currplayer, i)).x+432, (ds_list_find_value(currplayer, i)).y, springerbattle));
        }
        break;
    }
}

for (var i = 0; i &lt; ds_list_size(currplayer); i++)
{
    team_spd += (ds_list_find_value(currplayer, i)).spd;
}
for (var i = 0; i &lt; ds_list_size(currenemy); i++)
{
    enemy_spd += (ds_list_find_value(currenemy, i)).spd;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (player_turn)
{

if (!instance_exists(action_choice))
{
    xposition[0] = ds_list_find_value(currplayer, con).x;
    xposition[1] = ds_list_find_value(currplayer, con).x-30;
    xposition[2] = ds_list_find_value(currplayer, con).x;
    xposition[3] = ds_list_find_value(currplayer, con).x+30;
    yposition[0] = ds_list_find_value(currplayer, con).y-48;
    yposition[1] = ds_list_find_value(currplayer, con).y-54;
    yposition[2] = ds_list_find_value(currplayer, con).y-60;
    yposition[3] = ds_list_find_value(currplayer, con).y-54;
    select[0] = instance_create(xposition[0], yposition[0], action_choice);
    select[1] = instance_create(xposition[1], yposition[1], action_choice);
    select[2] = instance_create(xposition[2], yposition[2], action_choice);
    select[3] = instance_create(xposition[3], yposition[3], action_choice);
    with (select[0])
    {
        image_index = 0;
        depth = -5;
    }
    with (select[1])
    {
        image_index = 5;
        depth = -4;
    }
    with (select[2])
    {
        image_index = 6;
        depth = -4;
    }
    with (select[3])
    {
        image_index = 7;
        depth = -4;
    }
    choice = 0;
}

if ((keyboard_check_pressed(vk_left) || keyboard_check_pressed(vk_right)) &amp;&amp; (!instance_exists(enemy_select)))
{
    var choiceprev = choice;
    choice += 1*(keyboard_check_pressed(vk_left) + (-1*keyboard_check_pressed(vk_right)));
    if (choice &lt; 0)
    {
        choice = 3;
    }
    else if (choice &gt; 3)
    {
        choice = 0;
    }
    select[choiceprev].image_index = choiceprev+4;
    select[choice].image_index = choice;
    for (var i = 0; i &lt; 4; i++)
    {
        with (select[(choice+i)%4])
        {
            xpos = Battle.xposition[i];
            ypos = Battle.yposition[i];
        }
    }
}
else if (instance_exists(enemy_select))
{
    if (keyboard_check_pressed(vk_down))
    {
        enemy_choice++;
        if (enemy_choice &gt; ds_list_size(currenemy)-1)
        {
            enemy_choice--;
        }
    }
    else if (keyboard_check_pressed(vk_up))
    {
        enemy_choice--;
        if (enemy_choice &lt; 0)
        {
            enemy_choice++;
        }
    }
    with (enemy_select)
    {
        xpos = ds_list_find_value(Battle.currenemy, Battle.enemy_choice).x;
        ypos = ds_list_find_value(Battle.currenemy, Battle.enemy_choice).y-48;
    }
}

}

if (!player_turn)
{

if ((ds_list_find_value(currenemy, ds_list_size(currenemy)-1)).enemy_turn == false)
{
    if (team_spd &gt;= enemy_spd)
    {
        for (var p = 0; p &lt; ds_list_size(currplayer); p++)
        {
            with (ds_list_find_value(currplayer, (ds_list_find_value(sort_speed(currplayer), p))))
            {
                attack = true;
            }
        }
        for (var p = 0; p &lt; ds_list_size(currenemy); p++)
        {
            with (ds_list_find_value(currenemy, (ds_list_find_value(sort_speed(currenemy), p))))
            {
                attack = true;
            }
        }
        move_done = false;
        player_turn = true;
    }
    else if (team_spd &lt; enemy_spd)
    {
        for (var i = 0; i &lt; ds_list_size(sort_speed(currenemy)); i++)
        {
            with (ds_list_find_value(currenemy, (ds_list_find_value(sort_speed(currenemy), i))))
            {
                attack = true;
            }
        }
        for (var i = 0; i &lt; ds_list_size(sort_speed(currplayer)); i++)
        {
            with (ds_list_find_value(currplayer, (ds_list_find_value(sort_speed(currplayer), i))))
            {
                attack = true;
            }
        }
        move_done = false;
        player_turn = true;
    }
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(world0);
global.battlecomplete = true;
global.battleflee = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="90">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (choice = 0 &amp;&amp; !instance_exists(enemy_select))
{
    enemy_choice = 0;
    instance_create(ds_list_find_value(currenemy, 0).x, ds_list_find_value(currenemy, 0).y-48, enemy_select);
}
else
{
    player_choice();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="88">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(enemy_select))
{
    with (enemy_select)
    {
        instance_destroy();
    }
}
else
{
    player_undo();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(world0);
global.battlecomplete = true;
global.battleflee = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
